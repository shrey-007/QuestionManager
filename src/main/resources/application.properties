spring.datasource.url=jdbc:mysql://localhost:3306/QuestionManager2
spring.datasource.username=root
spring.datasource.password=saxena.home
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#a dialect refers to a variety of a language spoken by a particular group of people or in a specific geographical area.
#In the context of Hibernate, a dialect refers to a configuration setting that determines the database-specific SQL dialect that Hibernate should generate when interacting with a database. Different database systems may have variations in their SQL syntax, functions, and features.
#By specifying the correct dialect for the target database, Hibernate can optimize its interactions with the database, generate appropriate SQL statements, and take advantage of database-specific features.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#if database dont have tables then it will create create tables automatically by scanning @Table notation, so you dont even need to create database using sql queries.
spring.jpa.hibernate.ddl-auto=update

#for saving file
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#for mongo db(to store explaination of questions and To do list)
spring.data.mongodb.database=QuestionManager2
spring.data.mongodb.port=27017
spring.data.mongodb.host=localhost

### oauth2 configurations
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=627339872386-dp2umqmonbeaps8uig4223s8pugm3c64.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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


